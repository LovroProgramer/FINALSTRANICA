import socket
import os
from cryptography.hazmat.primitives import hashes, hmac

key = os.urandom(20)

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect(('localhost', 5000))

sock.send(key)

while(1):
    pozdrav = input("Unesi poruku: ")
    podaci = pozdrav.encode()
    h = hmac.HMAC(key, hashes.MD5())
    h.update(podaci)
    hash_poruke = h.finalize()
    sock.send(hash_poruke + podaci)  # Send hash and message together
    primljeni_podaci = sock.recv(1024)
    primljeni_pozdrav = primljeni_podaci.decode()
    print(primljeni_pozdrav)

sock.close()

import socket
from cryptography.hazmat.primitives import hashes, hmac
from cryptography.exceptions import InvalidSignature

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.bind(('localhost', 5000))
sock.listen(1)
clisock, addr = sock.accept()

key = clisock.recv(20)  # Receive key

while True:
    podaci = clisock.recv(1024)
    if not podaci:
        break
    hash_poruke = podaci[:16]  # The first 16 bytes are the hash
    poruka = podaci[16:]  # The rest is the message
    pozdrav = poruka.decode()
    h_provjera = hmac.HMAC(key, hashes.MD5())
    h_provjera.update(poruka)
    try:
        h_provjera.verify(hash_poruke)
        print(pozdrav)
        clisock.send(poruka)  # Send message back to client
    except InvalidSignature:
        print("Invalid signature")

clisock.close()
sock.close()